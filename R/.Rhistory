str(eu_sa_freqs)
grid(42,NA,lw=2,lty=1,col="grey")
grid(41,NA,lw=2,lty=1,col="grey")
grid(48,NA,lw=2,lty=1,col="grey")
abline(v=1:42,col="lightgrey",lty="dotted")
abline(v=1:42,col="grey",lty="dotted")
abline(v=1:42,col="grey",lty="dotted",lw=2)
quartz()
plot(1:4,1:4,col=c("red","lightred","blue","lightblue",pch=c(5,18,23,22)))
plot(1:4,1:4,col=c("blue","cyan","lightblue",pch=c(5,18,23,22)))
points(1:4,2,col=c("blue","cyan","lightblue",pch=22)
)
points(1:4,c(2,2,2),col=c("blue","cyan","lightblue",pch=22)
)
points(1:4,c(2,2,2,2),col=c("blue","cyan","lightblue",pch=22)
)
points(1:4,c(2,2,2,2),col=c("blue","cyan","lightblue"),pch=22)
points(1:4,c(3,3,3,3),col=c("blue","cyan","lightblue"),pch=22)
points(1:4,c(1,1,1,1),col=c("blue","cyan","lightblue"),pch=5)
points(1:4,c(1.5,1.5,1.5,1.5),col=c("blue","cyan","lightblue"),pch=23)
points(1:4,c(1.5,1.5,1.5,1.5),col=c("blue","cyan","lightblue"),pch=23,bg="lightblue")
points(1:4,c(1.5,1.5,1.5,1.5),col=c"blue",pch=23,bg="lightblue")
points(c(2),c(5),col="blue",pch=23,bg="lightblue")
points(c(2),c(5),col="blue",pch=23,bg="blue")
points(c(2),c(3),col="blue",pch=23,bg="blue")
points(c(2),c(3),col="blue",pch=23,bg="lightblue")
points(c(2),c(3),col="blue",pch=23,bg="cyan")
head(eu_sa_freqs)
str(eu_sa_sa)
str(eu_sa_base_odds)
str(eu_sa_base_odds)
ls()
ls()
str(fsts_joined)
summary(fsts_joined)
library("zoo")
x.Date <- as.Date(paste(2004, rep(1:4, 4:1), sample(1:28, 10), sep = "-"))
x <- zoo(rnorm(12), x.Date)
 
x
xm <- zoo(matrix(1:12, 4, 3), x.Date[1:4])
xm
rollmean(xm, 3)
str(fsts_joined)
cc = cut(subset(fsts_joined, CHR="X"), breaks=1000)
cc = cut(subset(fsts_joined, CHR="X")$BPS, breaks=1000)
str(cc)
levels(cc)
fsts_joined2 = data.frame(fsts_joined, bin=cc)
head(fsts_joined2)
aa = aggregate(fst_vie~bin, data=subset(fsts_joined2, CHR="X"), FUN=mean)
str(aa)
barplot(aa$fst_vie)
aa = aggregate(cbind(fst_vie,sd_vie)~bin, data=subset(fsts_joined2, CHR="X"), FUN=mean)
str(aa)
aa = aggregate(cbind(colnames(fsts_joined2)[-c(1:2,11)])~bin, data=subset(fsts_joined2, CHR="X"), FUN=mean)
aa = aggregate(cbind(mget(colnames(fsts_joined2)[-c(1:2,11)]))~bin, data=subset(fsts_joined2, CHR="X"), FUN=mean)
aa = aggregate(mget(colnames(fsts_joined2)[-c(1:2,11)])~bin, data=subset(fsts_joined2, CHR="X"), FUN=mean)
aa = aggregate(colnames(fsts_joined2)[-c(1:2,11)]~bin, data=subset(fsts_joined2, CHR="X"), FUN=mean)
aa = aggregate(x=subset(fsts_joined2, CHR=="X")[,-c(1:2,11)], by=list(bin), FUN=mean)
aa = aggregate(x=subset(fsts_joined2, CHR=="X")[,-c(1:2,11)], by=list(fsts_joined$bin), FUN=mean)
aa = aggregate(x=subset(fsts_joined2, CHR=="X")[,-c(1:2,11)], by=list(subset(fsts_joined, CHR =="X")$bin), FUN=mean)
aa = aggregate(x=subset(fsts_joined2, CHR=="X")[,-c(1:2,11)], by=list(subset(fsts_joined2, CHR =="X")$bin), FUN=mean)
str(aa)
plot(aa$fst_es)
plot(aa$fst_es)
barplot(aa$fst_es)
library(foreach) 
plot(NA, xlim=c(0,nrow(aa)), ylim=c(0, 0.3))
foreach(i=seq(1,7,2)) %do% points(1:nrow(aa), aa[,i+2], pch=i, col=c("black","red","green","blue","yellow")[i])
plot(NA, xlim=c(0,nrow(aa)), ylim=c(0, 0.1))
foreach(i=seq(1,7,2)) %do% points(1:nrow(aa), aa[,i+2], pch=i, col=c("black","red","green","blue","yellow")[i])
plot(NA, xlim=c(0,nrow(aa)), ylim=c(0, 0.06))
foreach(i=1:4) %do% points(1:nrow(aa), aa[,(2*(i)+1)], pch=i, col=c("black","red","green","blue")[i])
plot(NA, xlim=c(0,nrow(aa)), ylim=c(0, 0.06))
foreach(i=1:4) %do% points(1:nrow(aa), aa[,(2*(i)+1)], pch=i, col=c("black","red","green","blue")[i], cex=0.25)
plot(NA, xlim=c(0,nrow(aa)), ylim=c(0, 0.06))
foreach(i=1:4) %do% points(1:nrow(aa), aa[,(2*(i)+1)], pch=i, col=c("black","red","green","blue")[i], cex=0.5)
max(fsts_joined$BPS)
min(fsts_joined$BPS)
str(a)
str(aa)
 levels(fsts_joined$CHR)
head(fsts_joined)
head(100,fsts_joined)
head(fsts_joined,100)
fsts_joined[100:150,]
a=fsts_joined[0,]
a
a=fsts_joined[0,-c("Win5K")]
a=fsts_joined[0,-c(11)]
a
str(a)
levels(fsts_joined$CHR)
rownum
head(aa)
str(fst_win5K)
rm(fst_win5k)
summary(fst_win5K)
head(fst_win5K)
head(aa)
head(aa[-1,])
head(aa[,-1])
rbind(fst_win5K,aa[,-1])
fst_win5K=rbind(fst_win5K,aa[-1,])
fst_win5K=rbind(fst_win5K,aa[-1,])
nrow(fst_win5K)
fst_win5K=rbind(fst_win5K,aa[,-1])
summary(fst_win5K)
summary(fst_win5K)
chroms=c("X","2L","2R","3L","3R")
aggregate(fst_win5K,by=list("CHR"),FUN=max )
aggregate(fst_win5K$BPS,by=list("CHR"),FUN=max )
aggregate(BPS,data=fst_win5K,by=list(CHR),FUN=max )
aggregate(fst_win5K$BPS,data=fst_win5K,by=list(CHR),FUN=max )
aggregate(fst_win5K$BPS,by=list(fst_win5K$CHR),FUN=max )
aggregate(fst_win5K[,-c("BPS","CHR")],by=list(fst_win5K$CHR),FUN=max )
aggregate(fst_win5K[,-c(1,10)],by=list(fst_win5K$CHR),FUN=max )
ls
x
summary(fsts_joined)
dev.copy2pdf(file="fst_bases.pdf")
dev.copy2pdf(filename="fst_bases.pdf")
dev.cur()
dev.list()
dev.close()
dev.off()
dev.list()
dev.off(4)
dev.off(3)
dev.copy2pdf(filename="fst_bases.pdf")
dev.copy2pdf(file="fst_bases.pdf")
fst_win5K[]
nrow(a)
a
a
a[,c("BPS","fst_es")]
a[,c("fst_eu","fst_es" )]
a[,c("BPS","fst_eu","fst_es" )]
a[,c("BPS","fst_eu","fst_es" )]
str(aa)
str(fsts_joined)
warnings()
str(fst_win5K)
chrom="X"
srt(fsts_joined)
str(fsts_joined)
chrom="X"
chrom="3R"
colors()[c(494,558)]
a
a[,c("BPS","fst_eu")]
summary(ram_tab)
ls()
rm("fsts_joined","ram_tab","a","aa")
rm("fst_col")
gc()
1.9*10^6*10^-(seq(0,4,0.5))
1.9*10^6*10^-(seq(0,4.5,0.5))
1.9*10^6*10^-(seq(0,5,0.5))
eu_q
eu_x_q
eu_y_q
eu_y_q/eu_x_q
eu_y_q
sa_y_q
eu_q
sa_q
eu_sa_odds[,has_Pv & eu_sa_odds$P_sa <= 7.582959e-25]
eu_sa_odds[has_Pv & eu_sa_odds$P_sa <= 7.582959e-25,]
round(log10(eu_q),digits=0)
eu_q
eu_y_q
rbind(eu_q,eu_y_q)
rbind(eu_q,eu_x_q,eu_y_q,eu_y_q/eu_x_q)
eu_tab=rbind(eu_q,eu_x_q,eu_y_q,eu_y_q/eu_x_q)
round(eu_tab)
format(eu_tab,digits=2)
eu_tab
cor.test(eu_sa_odds$O_sa_ni[eu_sa_odds$P_eu <= 1e-3 & has_Pv & has_OR],eu_sa_odds$O_eu_ni[eu_sa_odds$P_eu <= 1e-3 & has_Pv & has_OR],method="spearman")$P
cor.test(eu_sa_odds$O_sa_ni[eu_sa_odds$P_eu <= 1e-3 & has_Pv & has_OR],eu_sa_odds$O_eu_ni[eu_sa_odds$P_eu <= 1e-3 & has_Pv & has_OR],method="spearman")$estimate
str(cor.test(eu_sa_odds$O_sa_ni[eu_sa_odds$P_eu <= 1e-3 & has_Pv & has_OR],eu_sa_odds$O_eu_ni[eu_sa_odds$P_eu <= 1e-3 & has_Pv & has_OR],method="spearman"))
cor.test(eu_sa_odds$O_sa_ni[eu_sa_odds$P_eu <= 1e-3 & has_Pv & has_OR],eu_sa_odds$O_eu_ni[eu_sa_odds$P_eu <= 1e-3 & has_Pv & has_OR],method="spearman")$estimate
eu_cor_q
ymin
eu_sa_odds[c(1,2,3),c("O_el","O_ed","O_svl","O_svd","O_sd","O_sl")]
flatten(eu_sa_odds[c(1,2,3),c("O_el","O_ed","O_svl","O_svd","O_sd","O_sl")])
c(eu_sa_odds[c(1,2,3),c("O_el","O_ed","O_svl","O_svd","O_sd","O_sl")])
vals=c(eu_sa_odds[c(1,2,3),c("O_el","O_ed","O_svl","O_svd","O_sd","O_sl")])
vals
str(vals)
 >unlist(vals)
unlist(vals)
vals=unlist(eu_sa_odds[c(1,2,3),c("O_el","O_ed","O_svl","O_svd","O_sd","O_sl")])
vals
str(vals)
colnames(eu_sa_freqs)
length(c("CHR","BPS","ALLELES","VL1","VL2","VD1","VD2","IL1","IL2","IL3","ID1","ID2","ID3","SL1","SL4","SL5","SD1","SD4","SD5","Vb1","Vb2","Vb3","Ib1","Ib2","Ib3","SDL1","SDL4","SDL5","SLD1","SLD4","SLD5","Sb","Peu","Oeu","Psa","Osa","Peu","Oeu"))
max(eu_sa_freqs$lPeu)
max(eu_sa_freqs$lPeu)
 max(eu_sa_freqs$lPeu,na.rm=T)
max(eu_sa_freqs$lPsa,na.rm=T)
 region_idx = which(eu_sa_freqs$CHR == bab2[1] & (bab2[2] <= eu_sa_freqs$BPS & eu_sa_freqs$BPS <= bab2[3] ) & (eu_sa_freqs$lPeu >= bab2_p[1] | eu_sa_freqs$lPsa >= bab2_p[2]))
eu_sa_freqs[region_idx,]
length(eu_sa_freqs$Peu)
length(eu_sa_freqs$Peu[eu_sa_freqs$Peu <= 0.01])
length(eu_sa_freqs$Peu[eu_sa_freqs$Peu <= 0.01 & is.na(eu_sa_freqs$Peu)])
length(eu_sa_freqs$Peu[eu_sa_freqs$Peu <= 0.01 & ! is.na(eu_sa_freqs$Peu)])
max(eu_plot$P)
min(eu_plot$P)
str(eu_plot)
summary(eu_plot)
head(eu_plot)
head(eu_plot)
summary(eu_plot)
region_sa = which(sa_plot$CHR == "3L" & (1039508 <= sa_plot$BP & sa_plot$BP <= 1111138 ))
ymax=45
plot(sa_plot$BP[region_sa],-log10(sa_plot$P[region_sa]), col="blue", pch=20, main=title, ylim=c(0,ymax))
plot(sa_plot$BP[region_sa],-log10(sa_plot$P[region_sa]), col="blue", pch=20, main="title", ylim=c(0,ymax))
ls
ls()
rm("region_sa","region_idx")
region_sa
 which(sa_plot$CHR == "3L" & (1039508 <= sa_plot$BP & sa_plot$BP <= 1111138 ))
 summary(sa_plot[which(sa_plot$CHR == "3L" & (1039508 <= sa_plot$BP & sa_plot$BP <= 1111138 )])
 summary(sa_plot[which(sa_plot$CHR == "3L" & (1039508 <= sa_plot$BP & sa_plot$BP <= 1111138 ),])
 summary(sa_plot[which(sa_plot$CHR == "3L" & (1039508 <= sa_plot$BP & sa_plot$BP <= 1111138 )),])
summary(sa_plot[which(sa_plot$CHR == "3L" & sa_plot$BP >= 500000  & sa_plot$BP <= 100000 ),])
summary(sa_plot[which(sa_plot$CHR == "3L" & sa_plot$BP >= 500000  & sa_plot$BP <= 1000000 ),])
head(ms_fst_5K)
summary(ms_fst_5K)
off_sa
off_eu
a="blbla.blub.bam"
sub('(\.[^.])$','',a,Perl=T)
sub("(\.[^.])$",'',a,Perl=T)
sub("(\.[^.])$",'',a,perl=T)
sub("(\\.[^.])$",'',a,perl=T)
sub("(\\.[^\.])$",'',a,perl=T)
sub("(.[^.])$",'',a,perl=T)
sub("(\.[^.])$",'',a,perl=T)
sub("([.][^.])$",'',a,perl=T)
sub("([^.])$",'',a,perl=T)
sub("([.][^.]+)$",'',a,perl=T)
basename(a)
paste(a,".bam")
paste0(a,".bam")
ram_tab
library(gridExtra)
file_name="/Volumes/Temp/Lukas/12pop_reduced_cols_ref.tab"
setwd("/Volumes/Temp/Lukas/")
file_name="/Volumes/Temp/Lukas/12pop_reduced_cols_ref.tab"
setwd("/Volumes/Temp/Lukas/")
file_name="/Volumes/Temp/Lukas/12pop_reduced_cols_noref.tab"
length(value_tab$Ref[value_tab$Ref==1])
length(value_tab$Ref[value_tab$Ref==1]) == 0
summaryBy(pop1 + pop2 + pop3 + pop4 +pop5 + pop6 +pop7 + pop8 + pop9 + pop10 ~ CHR + INV, data = trid_inv_data, FUN =c(median), keep.names = T)
names(base_inv)
base_inv$INV
head(all_inv)
dim(all_inv)
colnames(all_inv)
head(trid_inv_data)
names(all_inv_list)
all_inv_list[[6]]
head(all_inv_list[[6]])
head(all_inv_list[[6]][,base_vie])
head(c(all_inv_list[[6]][,base_vie]))
head(c(all_inv_list[[6]][,base_vie]))
santa
all_inv_list[[6]]
str(all_inv_list[[6]])
str(all_inv_list[[6]][,base_vie])
base_vie
unlist(str(all_inv_list[[6]][,base_vie]))
unlist(all_inv_list[[6]][,base_vie])
dim(unlist(all_inv_list[[6]][,base_vie]))
length(unlist(all_inv_list[[6]][,base_vie]))
length(unlist(all_inv_list[[6]][,"ALT"]))
length(c(all_inv_list[[6]][,base_vie]))
names(all_inv_list)
names(all_inv_list)
names(a7_inv_list)
str(trid_pV)
summary(all_plot)
summary(sa_het)
sa_het[0,-c("Fit")]
sa_het[0,"Fit"]
int_breaks
str(fit_win5K)
aggregate(fit_win1K$BPS,by=list(fit_win1K$CHR),FUN=max )
list(fit_win5K$CHR)
quartz()
chrom
str(aa)
str(aa)
str(fit_win5K)
ylimit
str(fit_win100K)
summary(fit_win100K)
str(aa)
chrom
chrom="2L"
aa=subset(fit_win100K,CHR==chrom)
str(aa)
summary(aa)
quartz()
ylimit
inversions
subset(inversions,CHR=chrom)
chrom
a=subset(inversions,CHR=chrom)
a
a=subset(inversions,CHR==chrom)
a
for(i in a){print(a)}
length(a)
rownum(a)
row.names(a)
dim(a)
dim(a)[1]
i
inv_sub[i]$START
inv_sub[i]
inv_sub[i,]
warnings()
inv_sub[i,]$I_NAME
as.char(inv_sub[i,]$I_NAME)
as.factor(inv_sub[i,]$I_NAME)
as.level(inv_sub[i,]$I_NAME)
level(inv_sub[i,]$I_NAME)
as.character(inv_sub[i,]$I_NAME)
inv_sub[i,]$I_NAME
as.character(as.integer())
colnames(inv_sub)
inv_sub$I_NAME
inv_sub$I_NAME[i]
i
inv_sub$I_NAME[1]
inv_sub[1,]$I_NAME
inversions
order(with(inversions,order(CHR,START))
)
order(with(inversions,order(CHR,START))
)
inversions[with(inversions,order(CHR,START))]
inversions[with(inversions,order(CHR,START),)]
inversions[with(inversions,order("CHR","START"),)]
inversions
with(inversions,order("CHR","START"))
with(inversions,order("CHR","START"),)
with(inversions,order("CHR","START"))
inversions
 order(inversions$CHR)
 order(inversions$CHR,inversions$START)
 inversions[order(inversions$CHR,inversions$START),]
head(sa_het)
NA -1
1/NA
 str(sa_het)
colanmes(sa_het)
colnames(sa_het)
colnames(sa_het)[16:]
colnames(sa_het)[16:length(colnames(sa_het))]
head(sa_het)
0.5 == 0.5
(0.5 == 0.5)-1
(0.5 == 0.5)-0.5
(0.0 == 0.5)-0.5
(0.0 == 0.5)*0.5
(1.0 == 0.5)*0.5
(0.5 == 0.5)*0.5
i
head(sa_het)
head(sa_het)
colnames(sa_het)
colnames(sa_het)[29:]
colnames(sa_het)[29:52]
head(fit_win5K)
colnames(fit_win100K)
colnames(fit_win100K)[3:8]
colnames(fit_win100K)[9:14]
ylimit
ylimit
ylimit
head(sa_het)
head(sa_het[,16:21] == 0.5)
head(rowSums(sa_het[,16:21] == 0.5))
head(rowSums(sa_het[,16:21] == 0.5,na.rm=T))
head(is.finite(sa_het[,16:21]))
head(sa_het[,16:21] == NA)
head(sa_het[,16:21] != NA)
head(is.na(sa_het[,16:21]))
head(! is.na(sa_het[,16:21]))
head(rowSums(! is.na(sa_het[,16:21])))
head(sa_het)
head(sa_het)
summary(fit_win100K$BPS)
summary(fit_win100K)
chrom
aa$BPS
str(aa)
summary(aa)
summary(aa)
summary(sa_het)
summary(sa_het)
summary(sa_het)
summary(fit_win100K)
summary($aa)
summary(aa)
chrom="2L"
)
summary(sa_het$fR_D)
0/0
is.na(0/0)
summary(sa_het$fR_D)
summary(sa_het$Fs_L)
summary(sa_het$Fs_D)
summary(sa_het)
summary(sa_het)
summary(sa_het)
summary(sa_het)
1-0.2/0.4
1-0.2/0.38
1-0.378/0.38
colnames(sa_het)
summary(fit_win100K)
grep("H_",colnames(fit_win100K))
colnames(fit_win100K)[grep("H_",colnames(fit_win100K))]
grep("H_",colnames(fit_win100K),value=T)
grep("H_","H_vd1",replacement="F_")
gsub("H_","F_","H_vd1")
summary(fit_win100K)
summary(fit_win100K)
summary(fit_win100K)
summary(sa_het)
summary(fit_win100K)
 colnames(fit_win100K)
 aa
summary(aa)
summary(fit_win100K)
summary(fit_win100K)
summary(fit_win100K)
summary(fit_win100K)
summary(fit_win100K)
2:length(indivs)
head(ita_het)
head(ita_het)
head(ita_het)
grep("ind_",colnames(ita_het),values=T)
grep("ind_",colnames(ita_het),value=T)
for (i in grep("ind_",colnames(ita_het),value=T)) {
    ita_het[,paste("H_",i,sep="")]=(ita_het[,i] == 0.5)*ita_het[,i]*2.0
}
+ > summary(ita_het)
summary(ita_het)
scolnames(ita_het)
colnames(ita_het)
(grep("H_H_",colnames(ita_het),value=T))
grep("H_H_",colnames(ita_het),value=T))]
ita_het[,!(names(ita_het) %in% grep("H_H_",colnames(ita_het),value=T))]
ls
ls()
str(ita_het)
ita_het=ita_het[,!(names(ita_het) %in% grep("H_H_",colnames(ita_het),value=T))]
str(ita_het)
grep("^H_ind_",colnames(ita_het),value=T)
summary(fit_win100K)
grep("^Ft_ind_",colnames(ita_het),value=T)
grep("^F_ind_",colnames(ita_het),value=T)
grep("^F.*_ind_",colnames(ita_het),value=T)
grep("^F",colnames(ita_het),value=T)
grep("^F.*_ind_",colnames(fit_win100K),value=T)
summary(fit_win100K)
summary(fit_win100K)
summary(fst_win100K)
summary(fit_win100K)
summary(fit_win100K)
wd
wd()
setwd()
dir()
summary(fit_win100K)
levels(fit_win100K$CHR)
colnames(fit_win100K)
grep("^Ft_v",colnames(fit_win100K),value=T)
save(f_avg_chrom,file="inbreeding_F_averages_chrom_sa.txt")
write(f_avg_chrom,file="inbreeding_F_averages_chrom_sa.txt")
write.table(f_avg_chrom,file="inbreeding_F_averages_chrom_sa.txt",sep="\t",quote=F)
write.table(f_avg_chrom,file="inbreeding_F_averages_chrom_sa.txt",sep="\t",quote=F,row.names=F)
colnames(f_avg_chrom)
colnames(f_avg_chrom)[1]
colnames(f_avg_chrom)[1]="CHR"
colnames(f_avg_chrom)
ls
ls()
rm("vi_plot","sa_het","ATD_vals","a7_inv_data","bab1_p","h_avg_chrom" )
ls()
rm("good","fit_win25K","fit_win5K","fit_win100K","tl_ita", "tl_vie","trid_pV" )
ls()
